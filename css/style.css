/* border-box: keeps padding and borders from being added by default */
*,
*::after,
*::before {
  margin: 0rem;
  padding: 0rem;
  box-sizing: inherit; }

/* because we've set the html font-size to 10px then each rem will equal 10px... if we have created some in pixels we can convert the px into rem easily */
html {
  font-size: 62.5%; }

body {
  box-sizing: border-box;
  padding: 3rem; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  /* 60% {
    transform: translateX(50px);
  } */
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(5rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes spin {
  0% {
    opacity: 0.3;
    transform: rotate3d(); }
  25% {
    transform: rotate3d(90deg); }
  50% {
    transform: rotateY(180deg); }
  75% {
    transform: rotateY(270deg); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* span is by default a block level occupy the entire width and create line breaks after and before */
/* transition helps to make things animate in relation to the inital state... not quite sure I understand this.  */
/* transform: translate are in relation to the element itself 
the top and left are in relation to the parent element */
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 3rem; }
  .heading-primary--main {
    display: block;
    font-size: 5rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft 2s ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 1.4rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 2s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #55c57a);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.2);
    text-shadow: 0.5rem 0.5rem 2rem #000; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777; }

.u-center-text {
  text-align: center; }

.u-margin-bottom {
  margin-bottom: 8rem; }

.btn {
  /* zindex defines where layered objects are located */
  /* animation fill mode will apply the properties before the animation starts */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 2s ease-out;
    animation-fill-mode: backwards; }

/* vh: is relative to the view height 
top: always keeps the image at the top ()can also use center and bottom 
can also change the direction of the gradient*/
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
    .header__logo:hover {
      animation: spin 4s; }
  .header__title-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 144rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row:after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc(((100% -2 * 6rem)/3)); }
  .row .col-2-of-3 {
    width: calc(2 *((100% -2 + 6rem)/3)+ gutter-horizontal); }
  .row .col-1-of-4 {
    width: calc((100% -3 * 6rem)/4); }
  .row .col-2-of-4 {
    width: calc((((100% -3 * 6rem)/4)*2)+ 6rem); }
  .row .col-3-of-4 {
    width: calc((((100% -3 * 6rem)/4)*3)+ 2 * 6rem); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
